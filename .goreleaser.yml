project_name: gosuv

env:
  - GO111MODULE=on

before:
  hooks:
    - go generate ./...

builds:
  - id: default
    binary: "{{.ProjectName}}"
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X "main.Version={{.Version}}"
      - -X "main.Commit={{.FullCommit}}"
      - -X "main.RepoUrl={{.GitURL}}"
      - -X "main.BuildDate={{.Date}}"
      - -X "main.BuiltWithGoVersion={{.Env.GO_VERSION}}"
      - -X "main.BuiltBy={{.Env.BUILT_BY}}"
    flags:
      - -tags=release
    goos:
      - windows
      - darwin
      - linux
    goarch:
      - 386
      - amd64
      - arm
    goarm:
      - 6
      - 7
    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
    hooks:
      post: ./upx.sh {{.ProjectName}}
archives:
  - id: binary
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    builds:
      - default
    wrap_in_directory: true
    files:
      - none*
    replacements:
      amd64: 64-bit
      386: 32-bit
      arm: ARM
      arm64: ARM64
      darwin: macOS
      linux: Linux
      windows: Windows
      openbsd: OpenBSD
      netbsd: NetBSD
      freebsd: FreeBSD
release:
  github:
    owner: cxjava
    name: "{{.ProjectName}}"
  draft: true
  prerelease: auto
  name_template: "{{.ProjectName}}-v{{.Version}}-{{.ShortCommit}}-{{.Date}}"
