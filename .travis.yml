language: go

go:
  - 1.13.x

env:
  global:
    - GO111MODULE=on
    - GORELEASER_VERSION=0.120.2
    - UPXVER="3.94"

install:
  - curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s -- -b $(go env GOPATH)/bin v${GORELEASER_VERSION}
  - |
    if [[ ! -f "$(go env GOPATH)/bin/upx" ]]
    then
      echo "Installing upx .."
      curl -OL "https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz"
      tar xvf "upx-${UPXVER}-amd64_linux.tar.xz"
      cp "upx-${UPXVER}-amd64_linux/upx" "$(go env GOPATH)/bin"
    fi
  - ls -al
  - upx --version
  - chmod +x upx.sh
  - ls -al
  - go get -u -v github.com/gobuffalo/packr/v2/packr2
  - go install github.com/gobuffalo/packr/v2/packr2

script:
  - go test -v

deploy:
  - provider: script
    skip_cleanup: true
    script: >-
      export GO_VERSION="$(go version)" &&
      export BUILT_BY="$(whoami)@$(hostname)" &&
      goreleaser release --skip-validate --skip-sign --debug
    on:
      all_branches: true
      condition: $TRAVIS_COMMIT_MESSAGE == *"[release]"*

  - provider: script
    skip_cleanup: true
    script: >-
      export GO_VERSION="$(go version)" &&
      export BUILT_BY="$(whoami)@$(hostname)" &&
      goreleaser release --snapshot --skip-publish --rm-dist --debug
    on:
      all_branches: true
      condition: $TRAVIS_COMMIT_MESSAGE == *"[test]"*