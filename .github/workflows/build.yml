name: goreleaser

on:
  # release:
  #   types: published
  # push:
  #   branches:
  #     - master
  # schedule:
  #  - cron: 0 8 * * 5
  watch:
   types: started

env:
  UPXVER: 3.96

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install upx
        run: |
          echo "Installing upx .."
          curl -OL "https://github.com/upx/upx/releases/download/v${UPXVER}/upx-${UPXVER}-amd64_linux.tar.xz"
          tar xvf "upx-${UPXVER}-amd64_linux.tar.xz"
          echo "::add-path::`pwd`/upx-${UPXVER}-amd64_linux/"
          upx --version
          chmod +x upx.sh
          git version
          git describe --abbrev=0 --tags
      - name: Set environment variables
        run: |
          echo ::set-env name=GO_VERSION::$(go version)
          echo ::set-env name=BUILT_BY::$(whoami)@$(hostname)
          echo ::set-env name=GORELEASER_CURRENT_TAG::$(git describe --abbrev=0 --tags)
      - name: Run GoReleaser
        run: |
          wget $(curl -s https://api.github.com/repos/goreleaser/goreleaser/releases | grep browser_download_url | grep 'goreleaser_Linux_x86_64' | head -n 1 | cut -d '"' -f 4)
          tar -zxvf goreleaser_Linux_x86_64.tar.gz
          echo "::add-path::$(pwd)/"
          ls -al
          echo $GORELEASER_CURRENT_TAG
          git tag -a $GORELEASER_CURRENT_TAG -m "First release"
          goreleaser release --skip-validate --skip-sign --debug
        env:
          GO_VERSION: ${{ env.GO_VERSION }}
          BUILT_BY: ${{ env.BUILT_BY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
